/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <bits/stdc++.h>

using namespace std;

vector<vector<int>> mergeIntervals(vector<vector<int>> curList, vector<int> newList)
{
    int start = newList[0];
    int end = newList[1];
    vector<vector<int>> finalList;
    
    for(int i=0;i<curList.size();i++)
    {
        if(curList[i][1] < start)
        {
            finalList.push_back(curList[i]);
        }
        else if(curList[i][0] > end)
        {
            finalList.push_back(vector<int>{start, end});
            while(i < curList.size())
            {
                finalList.push_back(curList[i]);
                i++;
            }
            return finalList;
        }
        else
        {
           start = min(curList[i][0], start);
           end = max(curList[i][1], end);
        }
    }
    finalList.push_back(vector<int>{start, end});
    return finalList;
}

int findMissingNumber(vector<int> arr)
{
    int i=0;
    while(i < arr.size())
    {
        if(arr[i] <= 0 || arr[i] > arr.size())
        {
            i++;
        }
        else
        {
            if(arr[i] == arr[arr[i]-1])
            {
                i++;
            }
            else
            {
                //cout<<arr[i]<<" "<<arr[arr[i]-1]<<endl;
                swap(arr[i], arr[arr[i]-1]);
            }
        }
    }
    
    cout<<"after swap elements are: "<<endl;
    for(int i=0;i<arr.size();i++)
    {
        cout<<arr[i]<<" ";
    }
    
    cout<<endl;
    for(int i=0;i<arr.size();i++)
    {
        if(arr[i] != i+1)
        {
            return i+1;
        }
    }
    return -1;
}


int main()
{
    //cout<<"Hello World";
    vector<vector<int>> curList = {{1,4}, {7,9}, {11,15}, {19,21}};
    vector<int> newList = {5,12};
    vector<vector<int>> finalList;
    
    
    vector<vector<int>> resList = mergeIntervals(curList, newList);
    for(auto it : resList)
    {
        for(auto itr : it)
        {
            cout<<itr<<" ";
        }
        cout<<endl;
    }
    
    vector<int> vec = {10,2,3,4,5,6,8,1,7,9};
    cout<<"missing number is: "<<findMissingNumber(vec)<<endl;
    return 0;
}
